import streamlit as st
import joblib
import numpy as np

# Load pipeline (hasil training di Colab, sudah ada imputer + scaler + XGBoost)
model = joblib.load("diabetes_model.joblib")

st.title("ü©∫ Prediksi Risiko Diabetes")
st.write("Aplikasi ini menggunakan Machine Learning (XGBoost) untuk memprediksi kemungkinan seseorang terkena diabetes.")

# Input fitur dari user
pregnancies = st.number_input("Pregnancies", min_value=0, max_value=20, value=1)
glucose = st.number_input("Glucose", min_value=0, max_value=200, value=100)
blood_pressure = st.number_input("Blood Pressure", min_value=0, max_value=150, value=70)
skin_thickness = st.number_input("Skin Thickness", min_value=0, max_value=100, value=20)
insulin = st.number_input("Insulin", min_value=0, max_value=900, value=80)
bmi = st.number_input("BMI", min_value=0.0, max_value=70.0, value=25.0)
dpf = st.number_input("Diabetes Pedigree Function", min_value=0.0, max_value=3.0, value=0.5)
age = st.number_input("Age", min_value=1, max_value=120, value=30)

# Prediksi ketika tombol ditekan
if st.button("Prediksi"):
    # Susun input user jadi array
    features = np.array([[pregnancies, glucose, blood_pressure, skin_thickness,
                          insulin, bmi, dpf, age]])
    
    prediction = model.predict(features)[0]
    prob = model.predict_proba(features)[0][1]

    st.subheader("Hasil Prediksi")
    if prediction == 1:
        st.error(f"‚ö†Ô∏è Terindikasi Diabetes (Probabilitas: {prob:.2f})")
    else:
        st.success(f"‚úÖ Tidak Terindikasi Diabetes (Probabilitas: {prob:.2f})")